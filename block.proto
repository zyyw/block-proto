syntax = "proto3";

package block_proto;

service BlockGrpcService {
  rpc CountTransactionByTimeRange(CountTransactionByTimeRangeRequest) returns (CountTransactionByTimeRangeResponse) {}
  rpc GetBlocks(GetBlocksRequest) returns (GetBlocksResponse) {}
  rpc CountTransactionByBlockNumber(CountTransactionByBlockNumberRequest) returns (CountTransactionByBlockNumberResponse) {}
}

message CountTransactionByBlockNumberRequest {
  uint64 block_number = 1;
}

message CountTransactionByBlockNumberResponse {
  ReturnCode code = 1;
  string message = 2;

  uint64 transaction_count = 3;
}

message GetBlocksRequest {
  uint32 limit = 1;
}

message GetBlocksResponse {
  ReturnCode code = 1;
  string message = 2;

  message BlockItem {
    uint64 block_number = 1;
    uint64 block_time = 2;
    string block_hash = 3;
    string parent_hash = 4;
    string coinbase = 5;
    uint64 gas_limit = 6;
  }
  repeated BlockItem block_item_array = 3;
}

message CountTransactionByTimeRangeRequest {
  uint64 begin_timestamp = 1;
  uint64 end_timestamp = 2;
}

message CountTransactionByTimeRangeResponse {
  ReturnCode code = 1;
  string message = 2;

  uint64 count = 3;
}

enum ReturnCode {
    OK = 0;
    INTERNAL_ERROR = 1;
    REQUEST_PARAM_ILLEGAL = 2;
    OTHER_ERROR = 99;
}
