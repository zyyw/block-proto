// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.1
// source: block.proto

package block_proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ReturnCode int32

const (
	ReturnCode_OK                    ReturnCode = 0
	ReturnCode_INTERNAL_ERROR        ReturnCode = 1
	ReturnCode_REQUEST_PARAM_ILLEGAL ReturnCode = 2
	ReturnCode_CASES_NOT_SUPPORTED   ReturnCode = 3
	ReturnCode_OTHER_ERROR           ReturnCode = 99
)

// Enum value maps for ReturnCode.
var (
	ReturnCode_name = map[int32]string{
		0:  "OK",
		1:  "INTERNAL_ERROR",
		2:  "REQUEST_PARAM_ILLEGAL",
		3:  "CASES_NOT_SUPPORTED",
		99: "OTHER_ERROR",
	}
	ReturnCode_value = map[string]int32{
		"OK":                    0,
		"INTERNAL_ERROR":        1,
		"REQUEST_PARAM_ILLEGAL": 2,
		"CASES_NOT_SUPPORTED":   3,
		"OTHER_ERROR":           99,
	}
)

func (x ReturnCode) Enum() *ReturnCode {
	p := new(ReturnCode)
	*p = x
	return p
}

func (x ReturnCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReturnCode) Descriptor() protoreflect.EnumDescriptor {
	return file_block_proto_enumTypes[0].Descriptor()
}

func (ReturnCode) Type() protoreflect.EnumType {
	return &file_block_proto_enumTypes[0]
}

func (x ReturnCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReturnCode.Descriptor instead.
func (ReturnCode) EnumDescriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{0}
}

type WalletGetTokenListByTypeRequest_TokenListType int32

const (
	WalletGetTokenListByTypeRequest_ALL     WalletGetTokenListByTypeRequest_TokenListType = 0
	WalletGetTokenListByTypeRequest_POPULAR WalletGetTokenListByTypeRequest_TokenListType = 1
	WalletGetTokenListByTypeRequest_DEFAULT WalletGetTokenListByTypeRequest_TokenListType = 2
)

// Enum value maps for WalletGetTokenListByTypeRequest_TokenListType.
var (
	WalletGetTokenListByTypeRequest_TokenListType_name = map[int32]string{
		0: "ALL",
		1: "POPULAR",
		2: "DEFAULT",
	}
	WalletGetTokenListByTypeRequest_TokenListType_value = map[string]int32{
		"ALL":     0,
		"POPULAR": 1,
		"DEFAULT": 2,
	}
)

func (x WalletGetTokenListByTypeRequest_TokenListType) Enum() *WalletGetTokenListByTypeRequest_TokenListType {
	p := new(WalletGetTokenListByTypeRequest_TokenListType)
	*p = x
	return p
}

func (x WalletGetTokenListByTypeRequest_TokenListType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WalletGetTokenListByTypeRequest_TokenListType) Descriptor() protoreflect.EnumDescriptor {
	return file_block_proto_enumTypes[1].Descriptor()
}

func (WalletGetTokenListByTypeRequest_TokenListType) Type() protoreflect.EnumType {
	return &file_block_proto_enumTypes[1]
}

func (x WalletGetTokenListByTypeRequest_TokenListType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WalletGetTokenListByTypeRequest_TokenListType.Descriptor instead.
func (WalletGetTokenListByTypeRequest_TokenListType) EnumDescriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{6, 0}
}

// wallet
type WalletTokenPriceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenDataArray []*WalletTokenPriceRequest_TokenData `protobuf:"bytes,1,rep,name=token_data_array,json=tokenDataArray,proto3" json:"token_data_array,omitempty"`
}

func (x *WalletTokenPriceRequest) Reset() {
	*x = WalletTokenPriceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletTokenPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletTokenPriceRequest) ProtoMessage() {}

func (x *WalletTokenPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletTokenPriceRequest.ProtoReflect.Descriptor instead.
func (*WalletTokenPriceRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{0}
}

func (x *WalletTokenPriceRequest) GetTokenDataArray() []*WalletTokenPriceRequest_TokenData {
	if x != nil {
		return x.TokenDataArray
	}
	return nil
}

type WalletTokenPriceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code                ReturnCode                                 `protobuf:"varint,1,opt,name=code,proto3,enum=block_proto.ReturnCode" json:"code,omitempty"`
	Message             string                                     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	TokenPriceDataArray []*WalletTokenPriceResponse_TokenPriceData `protobuf:"bytes,3,rep,name=token_price_data_array,json=tokenPriceDataArray,proto3" json:"token_price_data_array,omitempty"`
}

func (x *WalletTokenPriceResponse) Reset() {
	*x = WalletTokenPriceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletTokenPriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletTokenPriceResponse) ProtoMessage() {}

func (x *WalletTokenPriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletTokenPriceResponse.ProtoReflect.Descriptor instead.
func (*WalletTokenPriceResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{1}
}

func (x *WalletTokenPriceResponse) GetCode() ReturnCode {
	if x != nil {
		return x.Code
	}
	return ReturnCode_OK
}

func (x *WalletTokenPriceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WalletTokenPriceResponse) GetTokenPriceDataArray() []*WalletTokenPriceResponse_TokenPriceData {
	if x != nil {
		return x.TokenPriceDataArray
	}
	return nil
}

type WalletTxDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHash string `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
}

func (x *WalletTxDetailsRequest) Reset() {
	*x = WalletTxDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletTxDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletTxDetailsRequest) ProtoMessage() {}

func (x *WalletTxDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletTxDetailsRequest.ProtoReflect.Descriptor instead.
func (*WalletTxDetailsRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{2}
}

func (x *WalletTxDetailsRequest) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

type WalletTokenUpdatedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *WalletTokenUpdatedRequest) Reset() {
	*x = WalletTokenUpdatedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletTokenUpdatedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletTokenUpdatedRequest) ProtoMessage() {}

func (x *WalletTokenUpdatedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletTokenUpdatedRequest.ProtoReflect.Descriptor instead.
func (*WalletTokenUpdatedRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{3}
}

func (x *WalletTokenUpdatedRequest) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type WalletTokenListAndVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code           ReturnCode                                     `protobuf:"varint,1,opt,name=code,proto3,enum=block_proto.ReturnCode" json:"code,omitempty"`
	Message        string                                         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	TokenItemArray []*WalletTokenListAndVersionResponse_TokenItem `protobuf:"bytes,3,rep,name=token_item_array,json=tokenItemArray,proto3" json:"token_item_array,omitempty"`
	LatestVersion  uint32                                         `protobuf:"varint,4,opt,name=latest_version,json=latestVersion,proto3" json:"latest_version,omitempty"`
}

func (x *WalletTokenListAndVersionResponse) Reset() {
	*x = WalletTokenListAndVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletTokenListAndVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletTokenListAndVersionResponse) ProtoMessage() {}

func (x *WalletTokenListAndVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletTokenListAndVersionResponse.ProtoReflect.Descriptor instead.
func (*WalletTokenListAndVersionResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{4}
}

func (x *WalletTokenListAndVersionResponse) GetCode() ReturnCode {
	if x != nil {
		return x.Code
	}
	return ReturnCode_OK
}

func (x *WalletTokenListAndVersionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WalletTokenListAndVersionResponse) GetTokenItemArray() []*WalletTokenListAndVersionResponse_TokenItem {
	if x != nil {
		return x.TokenItemArray
	}
	return nil
}

func (x *WalletTokenListAndVersionResponse) GetLatestVersion() uint32 {
	if x != nil {
		return x.LatestVersion
	}
	return 0
}

type WalletTokenSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword string `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *WalletTokenSearchRequest) Reset() {
	*x = WalletTokenSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletTokenSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletTokenSearchRequest) ProtoMessage() {}

func (x *WalletTokenSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletTokenSearchRequest.ProtoReflect.Descriptor instead.
func (*WalletTokenSearchRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{5}
}

func (x *WalletTokenSearchRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type WalletGetTokenListByTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type WalletGetTokenListByTypeRequest_TokenListType `protobuf:"varint,1,opt,name=type,proto3,enum=block_proto.WalletGetTokenListByTypeRequest_TokenListType" json:"type,omitempty"`
}

func (x *WalletGetTokenListByTypeRequest) Reset() {
	*x = WalletGetTokenListByTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletGetTokenListByTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletGetTokenListByTypeRequest) ProtoMessage() {}

func (x *WalletGetTokenListByTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletGetTokenListByTypeRequest.ProtoReflect.Descriptor instead.
func (*WalletGetTokenListByTypeRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{6}
}

func (x *WalletGetTokenListByTypeRequest) GetType() WalletGetTokenListByTypeRequest_TokenListType {
	if x != nil {
		return x.Type
	}
	return WalletGetTokenListByTypeRequest_ALL
}

type WalletTokenListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code           ReturnCode                           `protobuf:"varint,1,opt,name=code,proto3,enum=block_proto.ReturnCode" json:"code,omitempty"`
	Message        string                               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	TokenItemArray []*WalletTokenListResponse_TokenItem `protobuf:"bytes,3,rep,name=token_item_array,json=tokenItemArray,proto3" json:"token_item_array,omitempty"`
}

func (x *WalletTokenListResponse) Reset() {
	*x = WalletTokenListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletTokenListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletTokenListResponse) ProtoMessage() {}

func (x *WalletTokenListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletTokenListResponse.ProtoReflect.Descriptor instead.
func (*WalletTokenListResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{7}
}

func (x *WalletTokenListResponse) GetCode() ReturnCode {
	if x != nil {
		return x.Code
	}
	return ReturnCode_OK
}

func (x *WalletTokenListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WalletTokenListResponse) GetTokenItemArray() []*WalletTokenListResponse_TokenItem {
	if x != nil {
		return x.TokenItemArray
	}
	return nil
}

type WalletTxListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountAddress  string `protobuf:"bytes,1,opt,name=account_address,json=accountAddress,proto3" json:"account_address,omitempty"`
	ContractAddress string `protobuf:"bytes,2,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	PageNumber      uint32 `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize        uint32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *WalletTxListRequest) Reset() {
	*x = WalletTxListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletTxListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletTxListRequest) ProtoMessage() {}

func (x *WalletTxListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletTxListRequest.ProtoReflect.Descriptor instead.
func (*WalletTxListRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{8}
}

func (x *WalletTxListRequest) GetAccountAddress() string {
	if x != nil {
		return x.AccountAddress
	}
	return ""
}

func (x *WalletTxListRequest) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *WalletTxListRequest) GetPageNumber() uint32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *WalletTxListRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type WalletTxListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        ReturnCode                     `protobuf:"varint,1,opt,name=code,proto3,enum=block_proto.ReturnCode" json:"code,omitempty"`
	Message     string                         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	TxItemArray []*WalletTxListResponse_TxItem `protobuf:"bytes,3,rep,name=tx_item_array,json=txItemArray,proto3" json:"tx_item_array,omitempty"`
}

func (x *WalletTxListResponse) Reset() {
	*x = WalletTxListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletTxListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletTxListResponse) ProtoMessage() {}

func (x *WalletTxListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletTxListResponse.ProtoReflect.Descriptor instead.
func (*WalletTxListResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{9}
}

func (x *WalletTxListResponse) GetCode() ReturnCode {
	if x != nil {
		return x.Code
	}
	return ReturnCode_OK
}

func (x *WalletTxListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WalletTxListResponse) GetTxItemArray() []*WalletTxListResponse_TxItem {
	if x != nil {
		return x.TxItemArray
	}
	return nil
}

// block explorer (api)
type CountTransactionByBlockNumberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockNumber uint64 `protobuf:"varint,1,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
}

func (x *CountTransactionByBlockNumberRequest) Reset() {
	*x = CountTransactionByBlockNumberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountTransactionByBlockNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountTransactionByBlockNumberRequest) ProtoMessage() {}

func (x *CountTransactionByBlockNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountTransactionByBlockNumberRequest.ProtoReflect.Descriptor instead.
func (*CountTransactionByBlockNumberRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{10}
}

func (x *CountTransactionByBlockNumberRequest) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

type CountTransactionByBlockNumberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code             ReturnCode `protobuf:"varint,1,opt,name=code,proto3,enum=block_proto.ReturnCode" json:"code,omitempty"`
	Message          string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	TransactionCount uint64     `protobuf:"varint,3,opt,name=transaction_count,json=transactionCount,proto3" json:"transaction_count,omitempty"`
}

func (x *CountTransactionByBlockNumberResponse) Reset() {
	*x = CountTransactionByBlockNumberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountTransactionByBlockNumberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountTransactionByBlockNumberResponse) ProtoMessage() {}

func (x *CountTransactionByBlockNumberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountTransactionByBlockNumberResponse.ProtoReflect.Descriptor instead.
func (*CountTransactionByBlockNumberResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{11}
}

func (x *CountTransactionByBlockNumberResponse) GetCode() ReturnCode {
	if x != nil {
		return x.Code
	}
	return ReturnCode_OK
}

func (x *CountTransactionByBlockNumberResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CountTransactionByBlockNumberResponse) GetTransactionCount() uint64 {
	if x != nil {
		return x.TransactionCount
	}
	return 0
}

type GetBlocksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit uint32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetBlocksRequest) Reset() {
	*x = GetBlocksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlocksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlocksRequest) ProtoMessage() {}

func (x *GetBlocksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlocksRequest.ProtoReflect.Descriptor instead.
func (*GetBlocksRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{12}
}

func (x *GetBlocksRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetBlocksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code           ReturnCode                     `protobuf:"varint,1,opt,name=code,proto3,enum=block_proto.ReturnCode" json:"code,omitempty"`
	Message        string                         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	BlockItemArray []*GetBlocksResponse_BlockItem `protobuf:"bytes,3,rep,name=block_item_array,json=blockItemArray,proto3" json:"block_item_array,omitempty"`
}

func (x *GetBlocksResponse) Reset() {
	*x = GetBlocksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlocksResponse) ProtoMessage() {}

func (x *GetBlocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlocksResponse.ProtoReflect.Descriptor instead.
func (*GetBlocksResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{13}
}

func (x *GetBlocksResponse) GetCode() ReturnCode {
	if x != nil {
		return x.Code
	}
	return ReturnCode_OK
}

func (x *GetBlocksResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetBlocksResponse) GetBlockItemArray() []*GetBlocksResponse_BlockItem {
	if x != nil {
		return x.BlockItemArray
	}
	return nil
}

type CountByTimeRangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeginTimestamp uint64 `protobuf:"varint,1,opt,name=begin_timestamp,json=beginTimestamp,proto3" json:"begin_timestamp,omitempty"`
	EndTimestamp   uint64 `protobuf:"varint,2,opt,name=end_timestamp,json=endTimestamp,proto3" json:"end_timestamp,omitempty"`
}

func (x *CountByTimeRangeRequest) Reset() {
	*x = CountByTimeRangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountByTimeRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountByTimeRangeRequest) ProtoMessage() {}

func (x *CountByTimeRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountByTimeRangeRequest.ProtoReflect.Descriptor instead.
func (*CountByTimeRangeRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{14}
}

func (x *CountByTimeRangeRequest) GetBeginTimestamp() uint64 {
	if x != nil {
		return x.BeginTimestamp
	}
	return 0
}

func (x *CountByTimeRangeRequest) GetEndTimestamp() uint64 {
	if x != nil {
		return x.EndTimestamp
	}
	return 0
}

type CountByTimeRangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    ReturnCode `protobuf:"varint,1,opt,name=code,proto3,enum=block_proto.ReturnCode" json:"code,omitempty"`
	Message string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Count   uint64     `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CountByTimeRangeResponse) Reset() {
	*x = CountByTimeRangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountByTimeRangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountByTimeRangeResponse) ProtoMessage() {}

func (x *CountByTimeRangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountByTimeRangeResponse.ProtoReflect.Descriptor instead.
func (*CountByTimeRangeResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{15}
}

func (x *CountByTimeRangeResponse) GetCode() ReturnCode {
	if x != nil {
		return x.Code
	}
	return ReturnCode_OK
}

func (x *CountByTimeRangeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CountByTimeRangeResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ApiVerifyTokenContractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenSymbol string `protobuf:"bytes,1,opt,name=token_symbol,json=tokenSymbol,proto3" json:"token_symbol,omitempty"`
}

func (x *ApiVerifyTokenContractRequest) Reset() {
	*x = ApiVerifyTokenContractRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiVerifyTokenContractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiVerifyTokenContractRequest) ProtoMessage() {}

func (x *ApiVerifyTokenContractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiVerifyTokenContractRequest.ProtoReflect.Descriptor instead.
func (*ApiVerifyTokenContractRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{16}
}

func (x *ApiVerifyTokenContractRequest) GetTokenSymbol() string {
	if x != nil {
		return x.TokenSymbol
	}
	return ""
}

type ApiVerifyTokenContractResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code                 ReturnCode `protobuf:"varint,1,opt,name=code,proto3,enum=block_proto.ReturnCode" json:"code,omitempty"`
	Message              string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	IsVerifiedToken      bool       `protobuf:"varint,3,opt,name=is_verified_token,json=isVerifiedToken,proto3" json:"is_verified_token,omitempty"`
	TokenContractAddress string     `protobuf:"bytes,4,opt,name=token_contract_address,json=tokenContractAddress,proto3" json:"token_contract_address,omitempty"`
}

func (x *ApiVerifyTokenContractResponse) Reset() {
	*x = ApiVerifyTokenContractResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiVerifyTokenContractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiVerifyTokenContractResponse) ProtoMessage() {}

func (x *ApiVerifyTokenContractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiVerifyTokenContractResponse.ProtoReflect.Descriptor instead.
func (*ApiVerifyTokenContractResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{17}
}

func (x *ApiVerifyTokenContractResponse) GetCode() ReturnCode {
	if x != nil {
		return x.Code
	}
	return ReturnCode_OK
}

func (x *ApiVerifyTokenContractResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiVerifyTokenContractResponse) GetIsVerifiedToken() bool {
	if x != nil {
		return x.IsVerifiedToken
	}
	return false
}

func (x *ApiVerifyTokenContractResponse) GetTokenContractAddress() string {
	if x != nil {
		return x.TokenContractAddress
	}
	return ""
}

type ApiBlockOverviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockNumber uint64 `protobuf:"varint,1,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
}

func (x *ApiBlockOverviewRequest) Reset() {
	*x = ApiBlockOverviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiBlockOverviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiBlockOverviewRequest) ProtoMessage() {}

func (x *ApiBlockOverviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiBlockOverviewRequest.ProtoReflect.Descriptor instead.
func (*ApiBlockOverviewRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{18}
}

func (x *ApiBlockOverviewRequest) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

type ApiBlockOverviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        ReturnCode `protobuf:"varint,1,opt,name=code,proto3,enum=block_proto.ReturnCode" json:"code,omitempty"`
	Message     string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Exists      bool       `protobuf:"varint,3,opt,name=exists,proto3" json:"exists,omitempty"`
	BlockNumber uint64     `protobuf:"varint,4,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	BlockTime   uint64     `protobuf:"varint,5,opt,name=block_time,json=blockTime,proto3" json:"block_time,omitempty"`
	BlockHash   string     `protobuf:"bytes,6,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	ParentHash  string     `protobuf:"bytes,7,opt,name=parent_hash,json=parentHash,proto3" json:"parent_hash,omitempty"`
	UncleHash   string     `protobuf:"bytes,8,opt,name=uncle_hash,json=uncleHash,proto3" json:"uncle_hash,omitempty"`
	BlockRoot   string     `protobuf:"bytes,9,opt,name=block_root,json=blockRoot,proto3" json:"block_root,omitempty"`
	Coinbase    string     `protobuf:"bytes,10,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
	GasLimit    uint64     `protobuf:"varint,11,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	GasUsed     uint64     `protobuf:"varint,12,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`
}

func (x *ApiBlockOverviewResponse) Reset() {
	*x = ApiBlockOverviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiBlockOverviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiBlockOverviewResponse) ProtoMessage() {}

func (x *ApiBlockOverviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiBlockOverviewResponse.ProtoReflect.Descriptor instead.
func (*ApiBlockOverviewResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{19}
}

func (x *ApiBlockOverviewResponse) GetCode() ReturnCode {
	if x != nil {
		return x.Code
	}
	return ReturnCode_OK
}

func (x *ApiBlockOverviewResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiBlockOverviewResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

func (x *ApiBlockOverviewResponse) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *ApiBlockOverviewResponse) GetBlockTime() uint64 {
	if x != nil {
		return x.BlockTime
	}
	return 0
}

func (x *ApiBlockOverviewResponse) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *ApiBlockOverviewResponse) GetParentHash() string {
	if x != nil {
		return x.ParentHash
	}
	return ""
}

func (x *ApiBlockOverviewResponse) GetUncleHash() string {
	if x != nil {
		return x.UncleHash
	}
	return ""
}

func (x *ApiBlockOverviewResponse) GetBlockRoot() string {
	if x != nil {
		return x.BlockRoot
	}
	return ""
}

func (x *ApiBlockOverviewResponse) GetCoinbase() string {
	if x != nil {
		return x.Coinbase
	}
	return ""
}

func (x *ApiBlockOverviewResponse) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *ApiBlockOverviewResponse) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

type ApiTxOverviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHash string `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
}

func (x *ApiTxOverviewRequest) Reset() {
	*x = ApiTxOverviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiTxOverviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiTxOverviewRequest) ProtoMessage() {}

func (x *ApiTxOverviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiTxOverviewRequest.ProtoReflect.Descriptor instead.
func (*ApiTxOverviewRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{20}
}

func (x *ApiTxOverviewRequest) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

type ApiTxOverviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         ReturnCode `protobuf:"varint,1,opt,name=code,proto3,enum=block_proto.ReturnCode" json:"code,omitempty"`
	Message      string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data         string     `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	IsPending    bool       `protobuf:"varint,4,opt,name=isPending,proto3" json:"isPending,omitempty"`
	Nonce        uint64     `protobuf:"varint,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
	GasLimit     uint64     `protobuf:"varint,6,opt,name=gasLimit,proto3" json:"gasLimit,omitempty"`
	GasUsed      uint64     `protobuf:"varint,7,opt,name=gasUsed,proto3" json:"gasUsed,omitempty"`
	BlockHash    string     `protobuf:"bytes,8,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	BlockNumber  uint64     `protobuf:"varint,9,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	FromAddress  string     `protobuf:"bytes,10,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	FromType     int32      `protobuf:"varint,11,opt,name=from_type,json=fromType,proto3" json:"from_type,omitempty"`
	ToAddress    string     `protobuf:"bytes,12,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	ToType       int32      `protobuf:"varint,13,opt,name=to_type,json=toType,proto3" json:"to_type,omitempty"`
	Value        string     `protobuf:"bytes,14,opt,name=value,proto3" json:"value,omitempty"`
	TxHash       string     `protobuf:"bytes,15,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	GasPrice     uint64     `protobuf:"varint,16,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	TxStatus     uint64     `protobuf:"varint,17,opt,name=tx_status,json=txStatus,proto3" json:"tx_status,omitempty"`
	BlockTime    uint64     `protobuf:"varint,18,opt,name=block_time,json=blockTime,proto3" json:"block_time,omitempty"`
	BlockTxCount uint64     `protobuf:"varint,19,opt,name=block_tx_count,json=blockTxCount,proto3" json:"block_tx_count,omitempty"`
	TokenName    string     `protobuf:"bytes,20,opt,name=token_name,json=tokenName,proto3" json:"token_name,omitempty"`
	Type         string     `protobuf:"bytes,21,opt,name=type,proto3" json:"type,omitempty"`
	Decimal      uint32     `protobuf:"varint,22,opt,name=decimal,proto3" json:"decimal,omitempty"`
}

func (x *ApiTxOverviewResponse) Reset() {
	*x = ApiTxOverviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiTxOverviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiTxOverviewResponse) ProtoMessage() {}

func (x *ApiTxOverviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiTxOverviewResponse.ProtoReflect.Descriptor instead.
func (*ApiTxOverviewResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{21}
}

func (x *ApiTxOverviewResponse) GetCode() ReturnCode {
	if x != nil {
		return x.Code
	}
	return ReturnCode_OK
}

func (x *ApiTxOverviewResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiTxOverviewResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *ApiTxOverviewResponse) GetIsPending() bool {
	if x != nil {
		return x.IsPending
	}
	return false
}

func (x *ApiTxOverviewResponse) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *ApiTxOverviewResponse) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *ApiTxOverviewResponse) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *ApiTxOverviewResponse) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *ApiTxOverviewResponse) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *ApiTxOverviewResponse) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *ApiTxOverviewResponse) GetFromType() int32 {
	if x != nil {
		return x.FromType
	}
	return 0
}

func (x *ApiTxOverviewResponse) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *ApiTxOverviewResponse) GetToType() int32 {
	if x != nil {
		return x.ToType
	}
	return 0
}

func (x *ApiTxOverviewResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ApiTxOverviewResponse) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *ApiTxOverviewResponse) GetGasPrice() uint64 {
	if x != nil {
		return x.GasPrice
	}
	return 0
}

func (x *ApiTxOverviewResponse) GetTxStatus() uint64 {
	if x != nil {
		return x.TxStatus
	}
	return 0
}

func (x *ApiTxOverviewResponse) GetBlockTime() uint64 {
	if x != nil {
		return x.BlockTime
	}
	return 0
}

func (x *ApiTxOverviewResponse) GetBlockTxCount() uint64 {
	if x != nil {
		return x.BlockTxCount
	}
	return 0
}

func (x *ApiTxOverviewResponse) GetTokenName() string {
	if x != nil {
		return x.TokenName
	}
	return ""
}

func (x *ApiTxOverviewResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ApiTxOverviewResponse) GetDecimal() uint32 {
	if x != nil {
		return x.Decimal
	}
	return 0
}

type ApiCountAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *ApiCountAddressRequest) Reset() {
	*x = ApiCountAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiCountAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiCountAddressRequest) ProtoMessage() {}

func (x *ApiCountAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiCountAddressRequest.ProtoReflect.Descriptor instead.
func (*ApiCountAddressRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{22}
}

func (x *ApiCountAddressRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type ApiCountAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          ReturnCode `protobuf:"varint,1,opt,name=code,proto3,enum=block_proto.ReturnCode" json:"code,omitempty"`
	Message       string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	AccountCount  uint64     `protobuf:"varint,3,opt,name=account_count,json=accountCount,proto3" json:"account_count,omitempty"`
	ContractCount uint64     `protobuf:"varint,4,opt,name=contract_count,json=contractCount,proto3" json:"contract_count,omitempty"`
}

func (x *ApiCountAddressResponse) Reset() {
	*x = ApiCountAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiCountAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiCountAddressResponse) ProtoMessage() {}

func (x *ApiCountAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiCountAddressResponse.ProtoReflect.Descriptor instead.
func (*ApiCountAddressResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{23}
}

func (x *ApiCountAddressResponse) GetCode() ReturnCode {
	if x != nil {
		return x.Code
	}
	return ReturnCode_OK
}

func (x *ApiCountAddressResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiCountAddressResponse) GetAccountCount() uint64 {
	if x != nil {
		return x.AccountCount
	}
	return 0
}

func (x *ApiCountAddressResponse) GetContractCount() uint64 {
	if x != nil {
		return x.ContractCount
	}
	return 0
}

type ApiTxExistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    ReturnCode `protobuf:"varint,1,opt,name=code,proto3,enum=block_proto.ReturnCode" json:"code,omitempty"`
	Message string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Exists  bool       `protobuf:"varint,3,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *ApiTxExistsResponse) Reset() {
	*x = ApiTxExistsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiTxExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiTxExistsResponse) ProtoMessage() {}

func (x *ApiTxExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiTxExistsResponse.ProtoReflect.Descriptor instead.
func (*ApiTxExistsResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{24}
}

func (x *ApiTxExistsResponse) GetCode() ReturnCode {
	if x != nil {
		return x.Code
	}
	return ReturnCode_OK
}

func (x *ApiTxExistsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiTxExistsResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

type ApiBlockExistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    ReturnCode `protobuf:"varint,1,opt,name=code,proto3,enum=block_proto.ReturnCode" json:"code,omitempty"`
	Message string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Exists  bool       `protobuf:"varint,3,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *ApiBlockExistsResponse) Reset() {
	*x = ApiBlockExistsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiBlockExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiBlockExistsResponse) ProtoMessage() {}

func (x *ApiBlockExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiBlockExistsResponse.ProtoReflect.Descriptor instead.
func (*ApiBlockExistsResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{25}
}

func (x *ApiBlockExistsResponse) GetCode() ReturnCode {
	if x != nil {
		return x.Code
	}
	return ReturnCode_OK
}

func (x *ApiBlockExistsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiBlockExistsResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

type ApiContractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractAddress string `protobuf:"bytes,1,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
}

func (x *ApiContractRequest) Reset() {
	*x = ApiContractRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiContractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiContractRequest) ProtoMessage() {}

func (x *ApiContractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiContractRequest.ProtoReflect.Descriptor instead.
func (*ApiContractRequest) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{26}
}

func (x *ApiContractRequest) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

type ApiTxListByContractResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        ReturnCode                            `protobuf:"varint,1,opt,name=code,proto3,enum=block_proto.ReturnCode" json:"code,omitempty"`
	Message     string                                `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	TxItemArray []*ApiTxListByContractResponse_TxItem `protobuf:"bytes,3,rep,name=tx_item_array,json=txItemArray,proto3" json:"tx_item_array,omitempty"`
}

func (x *ApiTxListByContractResponse) Reset() {
	*x = ApiTxListByContractResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiTxListByContractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiTxListByContractResponse) ProtoMessage() {}

func (x *ApiTxListByContractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiTxListByContractResponse.ProtoReflect.Descriptor instead.
func (*ApiTxListByContractResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{27}
}

func (x *ApiTxListByContractResponse) GetCode() ReturnCode {
	if x != nil {
		return x.Code
	}
	return ReturnCode_OK
}

func (x *ApiTxListByContractResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiTxListByContractResponse) GetTxItemArray() []*ApiTxListByContractResponse_TxItem {
	if x != nil {
		return x.TxItemArray
	}
	return nil
}

type ApiContractOverviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code            ReturnCode `protobuf:"varint,1,opt,name=code,proto3,enum=block_proto.ReturnCode" json:"code,omitempty"`
	Message         string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	TokenSymbol     string     `protobuf:"bytes,3,opt,name=token_symbol,json=tokenSymbol,proto3" json:"token_symbol,omitempty"`
	TokenName       string     `protobuf:"bytes,4,opt,name=token_name,json=tokenName,proto3" json:"token_name,omitempty"`
	TotalSupply     string     `protobuf:"bytes,5,opt,name=total_supply,json=totalSupply,proto3" json:"total_supply,omitempty"`
	ContractAddress string     `protobuf:"bytes,6,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	TokenDecimal    uint32     `protobuf:"varint,7,opt,name=token_decimal,json=tokenDecimal,proto3" json:"token_decimal,omitempty"`
	TokenIcon       string     `protobuf:"bytes,8,opt,name=token_icon,json=tokenIcon,proto3" json:"token_icon,omitempty"`
	TokenType       string     `protobuf:"bytes,9,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	TokenPrice      string     `protobuf:"bytes,10,opt,name=token_price,json=tokenPrice,proto3" json:"token_price,omitempty"`
	TxCount         uint64     `protobuf:"varint,11,opt,name=tx_count,json=txCount,proto3" json:"tx_count,omitempty"`
}

func (x *ApiContractOverviewResponse) Reset() {
	*x = ApiContractOverviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiContractOverviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiContractOverviewResponse) ProtoMessage() {}

func (x *ApiContractOverviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiContractOverviewResponse.ProtoReflect.Descriptor instead.
func (*ApiContractOverviewResponse) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{28}
}

func (x *ApiContractOverviewResponse) GetCode() ReturnCode {
	if x != nil {
		return x.Code
	}
	return ReturnCode_OK
}

func (x *ApiContractOverviewResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiContractOverviewResponse) GetTokenSymbol() string {
	if x != nil {
		return x.TokenSymbol
	}
	return ""
}

func (x *ApiContractOverviewResponse) GetTokenName() string {
	if x != nil {
		return x.TokenName
	}
	return ""
}

func (x *ApiContractOverviewResponse) GetTotalSupply() string {
	if x != nil {
		return x.TotalSupply
	}
	return ""
}

func (x *ApiContractOverviewResponse) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *ApiContractOverviewResponse) GetTokenDecimal() uint32 {
	if x != nil {
		return x.TokenDecimal
	}
	return 0
}

func (x *ApiContractOverviewResponse) GetTokenIcon() string {
	if x != nil {
		return x.TokenIcon
	}
	return ""
}

func (x *ApiContractOverviewResponse) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

func (x *ApiContractOverviewResponse) GetTokenPrice() string {
	if x != nil {
		return x.TokenPrice
	}
	return ""
}

func (x *ApiContractOverviewResponse) GetTxCount() uint64 {
	if x != nil {
		return x.TxCount
	}
	return 0
}

type WalletTokenPriceRequest_TokenData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractAddress string `protobuf:"bytes,1,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	Symbol          string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *WalletTokenPriceRequest_TokenData) Reset() {
	*x = WalletTokenPriceRequest_TokenData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletTokenPriceRequest_TokenData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletTokenPriceRequest_TokenData) ProtoMessage() {}

func (x *WalletTokenPriceRequest_TokenData) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletTokenPriceRequest_TokenData.ProtoReflect.Descriptor instead.
func (*WalletTokenPriceRequest_TokenData) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{0, 0}
}

func (x *WalletTokenPriceRequest_TokenData) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *WalletTokenPriceRequest_TokenData) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type WalletTokenPriceResponse_TokenPriceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractAddress string `protobuf:"bytes,1,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	Symbol          string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Price           string `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *WalletTokenPriceResponse_TokenPriceData) Reset() {
	*x = WalletTokenPriceResponse_TokenPriceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletTokenPriceResponse_TokenPriceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletTokenPriceResponse_TokenPriceData) ProtoMessage() {}

func (x *WalletTokenPriceResponse_TokenPriceData) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletTokenPriceResponse_TokenPriceData.ProtoReflect.Descriptor instead.
func (*WalletTokenPriceResponse_TokenPriceData) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{1, 0}
}

func (x *WalletTokenPriceResponse_TokenPriceData) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *WalletTokenPriceResponse_TokenPriceData) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *WalletTokenPriceResponse_TokenPriceData) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

type WalletTokenListAndVersionResponse_TokenItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol          string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ContractAddress string `protobuf:"bytes,3,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	GasLimit        string `protobuf:"bytes,4,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	Decimal         uint32 `protobuf:"varint,5,opt,name=decimal,proto3" json:"decimal,omitempty"`
	Icon            string `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	IsPopular       bool   `protobuf:"varint,7,opt,name=is_popular,json=isPopular,proto3" json:"is_popular,omitempty"`
	AddByDefault    bool   `protobuf:"varint,8,opt,name=add_by_default,json=addByDefault,proto3" json:"add_by_default,omitempty"`
	TokenType       string `protobuf:"bytes,9,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	Version         uint32 `protobuf:"varint,10,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *WalletTokenListAndVersionResponse_TokenItem) Reset() {
	*x = WalletTokenListAndVersionResponse_TokenItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletTokenListAndVersionResponse_TokenItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletTokenListAndVersionResponse_TokenItem) ProtoMessage() {}

func (x *WalletTokenListAndVersionResponse_TokenItem) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletTokenListAndVersionResponse_TokenItem.ProtoReflect.Descriptor instead.
func (*WalletTokenListAndVersionResponse_TokenItem) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{4, 0}
}

func (x *WalletTokenListAndVersionResponse_TokenItem) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *WalletTokenListAndVersionResponse_TokenItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WalletTokenListAndVersionResponse_TokenItem) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *WalletTokenListAndVersionResponse_TokenItem) GetGasLimit() string {
	if x != nil {
		return x.GasLimit
	}
	return ""
}

func (x *WalletTokenListAndVersionResponse_TokenItem) GetDecimal() uint32 {
	if x != nil {
		return x.Decimal
	}
	return 0
}

func (x *WalletTokenListAndVersionResponse_TokenItem) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *WalletTokenListAndVersionResponse_TokenItem) GetIsPopular() bool {
	if x != nil {
		return x.IsPopular
	}
	return false
}

func (x *WalletTokenListAndVersionResponse_TokenItem) GetAddByDefault() bool {
	if x != nil {
		return x.AddByDefault
	}
	return false
}

func (x *WalletTokenListAndVersionResponse_TokenItem) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

func (x *WalletTokenListAndVersionResponse_TokenItem) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type WalletTokenListResponse_TokenItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol          string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ContractAddress string `protobuf:"bytes,3,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	GasLimit        string `protobuf:"bytes,4,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	Decimal         uint32 `protobuf:"varint,5,opt,name=decimal,proto3" json:"decimal,omitempty"`
	Icon            string `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	IsPopular       bool   `protobuf:"varint,7,opt,name=is_popular,json=isPopular,proto3" json:"is_popular,omitempty"`
	AddByDefault    bool   `protobuf:"varint,8,opt,name=add_by_default,json=addByDefault,proto3" json:"add_by_default,omitempty"`
	TokenType       string `protobuf:"bytes,9,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	Version         uint32 `protobuf:"varint,10,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *WalletTokenListResponse_TokenItem) Reset() {
	*x = WalletTokenListResponse_TokenItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletTokenListResponse_TokenItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletTokenListResponse_TokenItem) ProtoMessage() {}

func (x *WalletTokenListResponse_TokenItem) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletTokenListResponse_TokenItem.ProtoReflect.Descriptor instead.
func (*WalletTokenListResponse_TokenItem) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{7, 0}
}

func (x *WalletTokenListResponse_TokenItem) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *WalletTokenListResponse_TokenItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WalletTokenListResponse_TokenItem) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *WalletTokenListResponse_TokenItem) GetGasLimit() string {
	if x != nil {
		return x.GasLimit
	}
	return ""
}

func (x *WalletTokenListResponse_TokenItem) GetDecimal() uint32 {
	if x != nil {
		return x.Decimal
	}
	return 0
}

func (x *WalletTokenListResponse_TokenItem) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *WalletTokenListResponse_TokenItem) GetIsPopular() bool {
	if x != nil {
		return x.IsPopular
	}
	return false
}

func (x *WalletTokenListResponse_TokenItem) GetAddByDefault() bool {
	if x != nil {
		return x.AddByDefault
	}
	return false
}

func (x *WalletTokenListResponse_TokenItem) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

func (x *WalletTokenListResponse_TokenItem) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type WalletTxListResponse_TxItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockNumber       string `protobuf:"bytes,1,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	Timestamp         string `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TransactionHash   string `protobuf:"bytes,3,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	Nonce             string `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	BlockHash         string `protobuf:"bytes,5,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	From              string `protobuf:"bytes,6,opt,name=from,proto3" json:"from,omitempty"`
	ContractAddress   string `protobuf:"bytes,7,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	To                string `protobuf:"bytes,8,opt,name=to,proto3" json:"to,omitempty"`
	Value             string `protobuf:"bytes,9,opt,name=value,proto3" json:"value,omitempty"`
	TransactionIndex  string `protobuf:"bytes,10,opt,name=transaction_index,json=transactionIndex,proto3" json:"transaction_index,omitempty"`
	Gas               string `protobuf:"bytes,11,opt,name=gas,proto3" json:"gas,omitempty"`
	GasPrice          string `protobuf:"bytes,12,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	GasUsed           string `protobuf:"bytes,13,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`
	CumulativeGasUsed string `protobuf:"bytes,14,opt,name=cumulative_gas_used,json=cumulativeGasUsed,proto3" json:"cumulative_gas_used,omitempty"`
	Input             string `protobuf:"bytes,15,opt,name=input,proto3" json:"input,omitempty"`
	Confirmed         bool   `protobuf:"varint,16,opt,name=confirmed,proto3" json:"confirmed,omitempty"`
	ReceiptStatus     int32  `protobuf:"varint,17,opt,name=receipt_status,json=receiptStatus,proto3" json:"receipt_status,omitempty"`
}

func (x *WalletTxListResponse_TxItem) Reset() {
	*x = WalletTxListResponse_TxItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletTxListResponse_TxItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletTxListResponse_TxItem) ProtoMessage() {}

func (x *WalletTxListResponse_TxItem) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletTxListResponse_TxItem.ProtoReflect.Descriptor instead.
func (*WalletTxListResponse_TxItem) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{9, 0}
}

func (x *WalletTxListResponse_TxItem) GetBlockNumber() string {
	if x != nil {
		return x.BlockNumber
	}
	return ""
}

func (x *WalletTxListResponse_TxItem) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *WalletTxListResponse_TxItem) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

func (x *WalletTxListResponse_TxItem) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *WalletTxListResponse_TxItem) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *WalletTxListResponse_TxItem) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *WalletTxListResponse_TxItem) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *WalletTxListResponse_TxItem) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *WalletTxListResponse_TxItem) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *WalletTxListResponse_TxItem) GetTransactionIndex() string {
	if x != nil {
		return x.TransactionIndex
	}
	return ""
}

func (x *WalletTxListResponse_TxItem) GetGas() string {
	if x != nil {
		return x.Gas
	}
	return ""
}

func (x *WalletTxListResponse_TxItem) GetGasPrice() string {
	if x != nil {
		return x.GasPrice
	}
	return ""
}

func (x *WalletTxListResponse_TxItem) GetGasUsed() string {
	if x != nil {
		return x.GasUsed
	}
	return ""
}

func (x *WalletTxListResponse_TxItem) GetCumulativeGasUsed() string {
	if x != nil {
		return x.CumulativeGasUsed
	}
	return ""
}

func (x *WalletTxListResponse_TxItem) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *WalletTxListResponse_TxItem) GetConfirmed() bool {
	if x != nil {
		return x.Confirmed
	}
	return false
}

func (x *WalletTxListResponse_TxItem) GetReceiptStatus() int32 {
	if x != nil {
		return x.ReceiptStatus
	}
	return 0
}

type GetBlocksResponse_BlockItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockNumber uint64 `protobuf:"varint,1,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	BlockTime   uint64 `protobuf:"varint,2,opt,name=block_time,json=blockTime,proto3" json:"block_time,omitempty"`
	BlockHash   string `protobuf:"bytes,3,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	ParentHash  string `protobuf:"bytes,4,opt,name=parent_hash,json=parentHash,proto3" json:"parent_hash,omitempty"`
	Coinbase    string `protobuf:"bytes,5,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
	GasLimit    uint64 `protobuf:"varint,6,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
}

func (x *GetBlocksResponse_BlockItem) Reset() {
	*x = GetBlocksResponse_BlockItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlocksResponse_BlockItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlocksResponse_BlockItem) ProtoMessage() {}

func (x *GetBlocksResponse_BlockItem) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlocksResponse_BlockItem.ProtoReflect.Descriptor instead.
func (*GetBlocksResponse_BlockItem) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{13, 0}
}

func (x *GetBlocksResponse_BlockItem) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *GetBlocksResponse_BlockItem) GetBlockTime() uint64 {
	if x != nil {
		return x.BlockTime
	}
	return 0
}

func (x *GetBlocksResponse_BlockItem) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *GetBlocksResponse_BlockItem) GetParentHash() string {
	if x != nil {
		return x.ParentHash
	}
	return ""
}

func (x *GetBlocksResponse_BlockItem) GetCoinbase() string {
	if x != nil {
		return x.Coinbase
	}
	return ""
}

func (x *GetBlocksResponse_BlockItem) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

type ApiTxListByContractResponse_TxItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHash        string `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	BlockNumber   uint64 `protobuf:"varint,2,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	TxFrom        string `protobuf:"bytes,3,opt,name=tx_from,json=txFrom,proto3" json:"tx_from,omitempty"`
	TxTo          string `protobuf:"bytes,4,opt,name=tx_to,json=txTo,proto3" json:"tx_to,omitempty"`
	TxStatus      uint32 `protobuf:"varint,5,opt,name=tx_status,json=txStatus,proto3" json:"tx_status,omitempty"`
	BlockTime     uint64 `protobuf:"varint,6,opt,name=block_time,json=blockTime,proto3" json:"block_time,omitempty"`
	GasPrice      string `protobuf:"bytes,7,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	GasUsed       string `protobuf:"bytes,8,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`
	ContractValue string `protobuf:"bytes,9,opt,name=contract_value,json=contractValue,proto3" json:"contract_value,omitempty"`
}

func (x *ApiTxListByContractResponse_TxItem) Reset() {
	*x = ApiTxListByContractResponse_TxItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiTxListByContractResponse_TxItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiTxListByContractResponse_TxItem) ProtoMessage() {}

func (x *ApiTxListByContractResponse_TxItem) ProtoReflect() protoreflect.Message {
	mi := &file_block_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiTxListByContractResponse_TxItem.ProtoReflect.Descriptor instead.
func (*ApiTxListByContractResponse_TxItem) Descriptor() ([]byte, []int) {
	return file_block_proto_rawDescGZIP(), []int{27, 0}
}

func (x *ApiTxListByContractResponse_TxItem) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *ApiTxListByContractResponse_TxItem) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *ApiTxListByContractResponse_TxItem) GetTxFrom() string {
	if x != nil {
		return x.TxFrom
	}
	return ""
}

func (x *ApiTxListByContractResponse_TxItem) GetTxTo() string {
	if x != nil {
		return x.TxTo
	}
	return ""
}

func (x *ApiTxListByContractResponse_TxItem) GetTxStatus() uint32 {
	if x != nil {
		return x.TxStatus
	}
	return 0
}

func (x *ApiTxListByContractResponse_TxItem) GetBlockTime() uint64 {
	if x != nil {
		return x.BlockTime
	}
	return 0
}

func (x *ApiTxListByContractResponse_TxItem) GetGasPrice() string {
	if x != nil {
		return x.GasPrice
	}
	return ""
}

func (x *ApiTxListByContractResponse_TxItem) GetGasUsed() string {
	if x != nil {
		return x.GasUsed
	}
	return ""
}

func (x *ApiTxListByContractResponse_TxItem) GetContractValue() string {
	if x != nil {
		return x.ContractValue
	}
	return ""
}

var File_block_proto protoreflect.FileDescriptor

var file_block_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc3, 0x01, 0x0a, 0x17, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x41, 0x72, 0x72, 0x61, 0x79,
	0x1a, 0x4e, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a,
	0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x22, 0xb7, 0x02, 0x0a, 0x18, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x69, 0x0a, 0x16, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x13, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x41, 0x72, 0x72, 0x61, 0x79, 0x1a,
	0x69, 0x0a, 0x0e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x31, 0x0a, 0x16, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x54, 0x78, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x22, 0x35, 0x0a,
	0x19, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0xa3, 0x04, 0x0a, 0x21, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x62, 0x0a, 0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0xab, 0x02, 0x0a,
	0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x70, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x61,
	0x64, 0x64, 0x5f, 0x62, 0x79, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x42, 0x79, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x34, 0x0a, 0x18, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x22, 0xa5, 0x01, 0x0a, 0x1f, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x32, 0x0a, 0x0d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x50, 0x4f, 0x50, 0x55, 0x4c, 0x41, 0x52, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x44,
	0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x02, 0x22, 0xe8, 0x03, 0x0a, 0x17, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x58, 0x0a, 0x10, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x41, 0x72, 0x72, 0x61, 0x79, 0x1a, 0xab, 0x02, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61,
	0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67,
	0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x6f, 0x70, 0x75,
	0x6c, 0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x6f, 0x70,
	0x75, 0x6c, 0x61, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x5f, 0x62, 0x79, 0x5f, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x64,
	0x64, 0x42, 0x79, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0xa7, 0x01, 0x0a, 0x13, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x78,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xbe, 0x05,
	0x0a, 0x14, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4c, 0x0a,
	0x0d, 0x74, 0x78, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b,
	0x74, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x72, 0x72, 0x61, 0x79, 0x1a, 0x90, 0x04, 0x0a, 0x06,
	0x54, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x29, 0x0a, 0x10, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x11,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x61, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x61, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x67,
	0x61, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x5f,
	0x75, 0x73, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x73, 0x55,
	0x73, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x47, 0x61, 0x73, 0x55,
	0x73, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x49,
	0x0a, 0x24, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x9b, 0x01, 0x0a, 0x25, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x28, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0xf7, 0x02, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x52,
	0x0a, 0x10, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x61, 0x72, 0x72,
	0x61, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x1a, 0xc6, 0x01, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x67, 0x0a, 0x17, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0e, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x22, 0x77, 0x0a, 0x18, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x42, 0x0a,
	0x1d, 0x41, 0x70, 0x69, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x22, 0xc9, 0x01, 0x0a, 0x1e, 0x41, 0x70, 0x69, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x69,
	0x73, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x3c, 0x0a,
	0x17, 0x41, 0x70, 0x69, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x8d, 0x03, 0x0a, 0x18,
	0x41, 0x70, 0x69, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x6e, 0x63,
	0x6c, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x6e, 0x63, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x22, 0x2f, 0x0a, 0x14, 0x41,
	0x70, 0x69, 0x54, 0x78, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x22, 0x91, 0x05, 0x0a,
	0x15, 0x41, 0x70, 0x69, 0x54, 0x78, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12,
	0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a,
	0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74,
	0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x78, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x78, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x78, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61,
	0x6c, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x22, 0x32, 0x0a, 0x16, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0xac, 0x01, 0x0a, 0x17, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x74, 0x0a, 0x13, 0x41, 0x70, 0x69, 0x54, 0x78, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x22, 0x77, 0x0a, 0x16, 0x41, 0x70, 0x69,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x69, 0x73,
	0x74, 0x73, 0x22, 0x3f, 0x0a, 0x12, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0xc9, 0x03, 0x0a, 0x1b, 0x41, 0x70, 0x69, 0x54, 0x78, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x53, 0x0a, 0x0d, 0x74, 0x78,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x70, 0x69, 0x54, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x78, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x0b, 0x74, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x72, 0x72, 0x61, 0x79, 0x1a,
	0x8d, 0x02, 0x0a, 0x06, 0x54, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x12,
	0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x78, 0x54, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x78, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x93, 0x03, 0x0a, 0x1b, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4f,
	0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x78,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x78,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x2a, 0x6d, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x49,
	0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12,
	0x19, 0x0a, 0x15, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d,
	0x5f, 0x49, 0x4c, 0x4c, 0x45, 0x47, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x41,
	0x53, 0x45, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45,
	0x44, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x63, 0x32, 0xae, 0x0f, 0x0a, 0x10, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x47, 0x72,
	0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x61, 0x0a, 0x10, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0f,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x78, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x23, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x54, 0x78, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x12, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x26, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x11, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x25,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7a, 0x0a,
	0x18, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x18, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x78, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x78, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x1b,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x24, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x09, 0x47, 0x65,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x1d, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x88, 0x01, 0x0a, 0x1d, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x31, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x17, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x24,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a,
	0x18, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x42, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x24, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x14, 0x41, 0x70, 0x69, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x12, 0x2a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x70, 0x69, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x69, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x10, 0x41,
	0x70, 0x69, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12,
	0x24, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70,
	0x69, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x69, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4f, 0x76, 0x65, 0x72,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58,
	0x0a, 0x0d, 0x41, 0x70, 0x69, 0x54, 0x78, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12,
	0x21, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70,
	0x69, 0x54, 0x78, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x70, 0x69, 0x54, 0x78, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0f, 0x41, 0x70, 0x69, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x70, 0x69, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0b, 0x41, 0x70, 0x69, 0x54,
	0x78, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x21, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x69, 0x54, 0x78, 0x4f, 0x76, 0x65, 0x72, 0x76,
	0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x69, 0x54, 0x78, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d,
	0x0a, 0x0e, 0x41, 0x70, 0x69, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73,
	0x12, 0x24, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x70, 0x69, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x69, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a,
	0x13, 0x41, 0x70, 0x69, 0x54, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x12, 0x1f, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x69, 0x54, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x62, 0x0a, 0x13, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x1f, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_block_proto_rawDescOnce sync.Once
	file_block_proto_rawDescData = file_block_proto_rawDesc
)

func file_block_proto_rawDescGZIP() []byte {
	file_block_proto_rawDescOnce.Do(func() {
		file_block_proto_rawDescData = protoimpl.X.CompressGZIP(file_block_proto_rawDescData)
	})
	return file_block_proto_rawDescData
}

var file_block_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_block_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_block_proto_goTypes = []interface{}{
	(ReturnCode)(0), // 0: block_proto.ReturnCode
	(WalletGetTokenListByTypeRequest_TokenListType)(0),  // 1: block_proto.WalletGetTokenListByTypeRequest.TokenListType
	(*WalletTokenPriceRequest)(nil),                     // 2: block_proto.WalletTokenPriceRequest
	(*WalletTokenPriceResponse)(nil),                    // 3: block_proto.WalletTokenPriceResponse
	(*WalletTxDetailsRequest)(nil),                      // 4: block_proto.WalletTxDetailsRequest
	(*WalletTokenUpdatedRequest)(nil),                   // 5: block_proto.WalletTokenUpdatedRequest
	(*WalletTokenListAndVersionResponse)(nil),           // 6: block_proto.WalletTokenListAndVersionResponse
	(*WalletTokenSearchRequest)(nil),                    // 7: block_proto.WalletTokenSearchRequest
	(*WalletGetTokenListByTypeRequest)(nil),             // 8: block_proto.WalletGetTokenListByTypeRequest
	(*WalletTokenListResponse)(nil),                     // 9: block_proto.WalletTokenListResponse
	(*WalletTxListRequest)(nil),                         // 10: block_proto.WalletTxListRequest
	(*WalletTxListResponse)(nil),                        // 11: block_proto.WalletTxListResponse
	(*CountTransactionByBlockNumberRequest)(nil),        // 12: block_proto.CountTransactionByBlockNumberRequest
	(*CountTransactionByBlockNumberResponse)(nil),       // 13: block_proto.CountTransactionByBlockNumberResponse
	(*GetBlocksRequest)(nil),                            // 14: block_proto.GetBlocksRequest
	(*GetBlocksResponse)(nil),                           // 15: block_proto.GetBlocksResponse
	(*CountByTimeRangeRequest)(nil),                     // 16: block_proto.CountByTimeRangeRequest
	(*CountByTimeRangeResponse)(nil),                    // 17: block_proto.CountByTimeRangeResponse
	(*ApiVerifyTokenContractRequest)(nil),               // 18: block_proto.ApiVerifyTokenContractRequest
	(*ApiVerifyTokenContractResponse)(nil),              // 19: block_proto.ApiVerifyTokenContractResponse
	(*ApiBlockOverviewRequest)(nil),                     // 20: block_proto.ApiBlockOverviewRequest
	(*ApiBlockOverviewResponse)(nil),                    // 21: block_proto.ApiBlockOverviewResponse
	(*ApiTxOverviewRequest)(nil),                        // 22: block_proto.ApiTxOverviewRequest
	(*ApiTxOverviewResponse)(nil),                       // 23: block_proto.ApiTxOverviewResponse
	(*ApiCountAddressRequest)(nil),                      // 24: block_proto.ApiCountAddressRequest
	(*ApiCountAddressResponse)(nil),                     // 25: block_proto.ApiCountAddressResponse
	(*ApiTxExistsResponse)(nil),                         // 26: block_proto.ApiTxExistsResponse
	(*ApiBlockExistsResponse)(nil),                      // 27: block_proto.ApiBlockExistsResponse
	(*ApiContractRequest)(nil),                          // 28: block_proto.ApiContractRequest
	(*ApiTxListByContractResponse)(nil),                 // 29: block_proto.ApiTxListByContractResponse
	(*ApiContractOverviewResponse)(nil),                 // 30: block_proto.ApiContractOverviewResponse
	(*WalletTokenPriceRequest_TokenData)(nil),           // 31: block_proto.WalletTokenPriceRequest.TokenData
	(*WalletTokenPriceResponse_TokenPriceData)(nil),     // 32: block_proto.WalletTokenPriceResponse.TokenPriceData
	(*WalletTokenListAndVersionResponse_TokenItem)(nil), // 33: block_proto.WalletTokenListAndVersionResponse.TokenItem
	(*WalletTokenListResponse_TokenItem)(nil),           // 34: block_proto.WalletTokenListResponse.TokenItem
	(*WalletTxListResponse_TxItem)(nil),                 // 35: block_proto.WalletTxListResponse.TxItem
	(*GetBlocksResponse_BlockItem)(nil),                 // 36: block_proto.GetBlocksResponse.BlockItem
	(*ApiTxListByContractResponse_TxItem)(nil),          // 37: block_proto.ApiTxListByContractResponse.TxItem
}
var file_block_proto_depIdxs = []int32{
	31, // 0: block_proto.WalletTokenPriceRequest.token_data_array:type_name -> block_proto.WalletTokenPriceRequest.TokenData
	0,  // 1: block_proto.WalletTokenPriceResponse.code:type_name -> block_proto.ReturnCode
	32, // 2: block_proto.WalletTokenPriceResponse.token_price_data_array:type_name -> block_proto.WalletTokenPriceResponse.TokenPriceData
	0,  // 3: block_proto.WalletTokenListAndVersionResponse.code:type_name -> block_proto.ReturnCode
	33, // 4: block_proto.WalletTokenListAndVersionResponse.token_item_array:type_name -> block_proto.WalletTokenListAndVersionResponse.TokenItem
	1,  // 5: block_proto.WalletGetTokenListByTypeRequest.type:type_name -> block_proto.WalletGetTokenListByTypeRequest.TokenListType
	0,  // 6: block_proto.WalletTokenListResponse.code:type_name -> block_proto.ReturnCode
	34, // 7: block_proto.WalletTokenListResponse.token_item_array:type_name -> block_proto.WalletTokenListResponse.TokenItem
	0,  // 8: block_proto.WalletTxListResponse.code:type_name -> block_proto.ReturnCode
	35, // 9: block_proto.WalletTxListResponse.tx_item_array:type_name -> block_proto.WalletTxListResponse.TxItem
	0,  // 10: block_proto.CountTransactionByBlockNumberResponse.code:type_name -> block_proto.ReturnCode
	0,  // 11: block_proto.GetBlocksResponse.code:type_name -> block_proto.ReturnCode
	36, // 12: block_proto.GetBlocksResponse.block_item_array:type_name -> block_proto.GetBlocksResponse.BlockItem
	0,  // 13: block_proto.CountByTimeRangeResponse.code:type_name -> block_proto.ReturnCode
	0,  // 14: block_proto.ApiVerifyTokenContractResponse.code:type_name -> block_proto.ReturnCode
	0,  // 15: block_proto.ApiBlockOverviewResponse.code:type_name -> block_proto.ReturnCode
	0,  // 16: block_proto.ApiTxOverviewResponse.code:type_name -> block_proto.ReturnCode
	0,  // 17: block_proto.ApiCountAddressResponse.code:type_name -> block_proto.ReturnCode
	0,  // 18: block_proto.ApiTxExistsResponse.code:type_name -> block_proto.ReturnCode
	0,  // 19: block_proto.ApiBlockExistsResponse.code:type_name -> block_proto.ReturnCode
	0,  // 20: block_proto.ApiTxListByContractResponse.code:type_name -> block_proto.ReturnCode
	37, // 21: block_proto.ApiTxListByContractResponse.tx_item_array:type_name -> block_proto.ApiTxListByContractResponse.TxItem
	0,  // 22: block_proto.ApiContractOverviewResponse.code:type_name -> block_proto.ReturnCode
	2,  // 23: block_proto.BlockGrpcService.WalletTokenPrice:input_type -> block_proto.WalletTokenPriceRequest
	4,  // 24: block_proto.BlockGrpcService.WalletTxDetails:input_type -> block_proto.WalletTxDetailsRequest
	5,  // 25: block_proto.BlockGrpcService.WalletTokenUpdated:input_type -> block_proto.WalletTokenUpdatedRequest
	7,  // 26: block_proto.BlockGrpcService.WalletTokenSearch:input_type -> block_proto.WalletTokenSearchRequest
	8,  // 27: block_proto.BlockGrpcService.WalletGetTokenListByType:input_type -> block_proto.WalletGetTokenListByTypeRequest
	10, // 28: block_proto.BlockGrpcService.WalletGetTransactionList:input_type -> block_proto.WalletTxListRequest
	16, // 29: block_proto.BlockGrpcService.CountTransactionByTimeRange:input_type -> block_proto.CountByTimeRangeRequest
	14, // 30: block_proto.BlockGrpcService.GetBlocks:input_type -> block_proto.GetBlocksRequest
	12, // 31: block_proto.BlockGrpcService.CountTransactionByBlockNumber:input_type -> block_proto.CountTransactionByBlockNumberRequest
	16, // 32: block_proto.BlockGrpcService.CountAccountByTimeRange:input_type -> block_proto.CountByTimeRangeRequest
	16, // 33: block_proto.BlockGrpcService.CountContractByTimeRange:input_type -> block_proto.CountByTimeRangeRequest
	18, // 34: block_proto.BlockGrpcService.ApiVerifyTokenSymbol:input_type -> block_proto.ApiVerifyTokenContractRequest
	20, // 35: block_proto.BlockGrpcService.ApiBlockOverview:input_type -> block_proto.ApiBlockOverviewRequest
	22, // 36: block_proto.BlockGrpcService.ApiTxOverview:input_type -> block_proto.ApiTxOverviewRequest
	24, // 37: block_proto.BlockGrpcService.ApiCountAddress:input_type -> block_proto.ApiCountAddressRequest
	22, // 38: block_proto.BlockGrpcService.ApiTxExists:input_type -> block_proto.ApiTxOverviewRequest
	20, // 39: block_proto.BlockGrpcService.ApiBlockExists:input_type -> block_proto.ApiBlockOverviewRequest
	28, // 40: block_proto.BlockGrpcService.ApiTxListByContract:input_type -> block_proto.ApiContractRequest
	28, // 41: block_proto.BlockGrpcService.ApiContractOverview:input_type -> block_proto.ApiContractRequest
	3,  // 42: block_proto.BlockGrpcService.WalletTokenPrice:output_type -> block_proto.WalletTokenPriceResponse
	11, // 43: block_proto.BlockGrpcService.WalletTxDetails:output_type -> block_proto.WalletTxListResponse
	6,  // 44: block_proto.BlockGrpcService.WalletTokenUpdated:output_type -> block_proto.WalletTokenListAndVersionResponse
	9,  // 45: block_proto.BlockGrpcService.WalletTokenSearch:output_type -> block_proto.WalletTokenListResponse
	6,  // 46: block_proto.BlockGrpcService.WalletGetTokenListByType:output_type -> block_proto.WalletTokenListAndVersionResponse
	11, // 47: block_proto.BlockGrpcService.WalletGetTransactionList:output_type -> block_proto.WalletTxListResponse
	17, // 48: block_proto.BlockGrpcService.CountTransactionByTimeRange:output_type -> block_proto.CountByTimeRangeResponse
	15, // 49: block_proto.BlockGrpcService.GetBlocks:output_type -> block_proto.GetBlocksResponse
	13, // 50: block_proto.BlockGrpcService.CountTransactionByBlockNumber:output_type -> block_proto.CountTransactionByBlockNumberResponse
	17, // 51: block_proto.BlockGrpcService.CountAccountByTimeRange:output_type -> block_proto.CountByTimeRangeResponse
	17, // 52: block_proto.BlockGrpcService.CountContractByTimeRange:output_type -> block_proto.CountByTimeRangeResponse
	19, // 53: block_proto.BlockGrpcService.ApiVerifyTokenSymbol:output_type -> block_proto.ApiVerifyTokenContractResponse
	21, // 54: block_proto.BlockGrpcService.ApiBlockOverview:output_type -> block_proto.ApiBlockOverviewResponse
	23, // 55: block_proto.BlockGrpcService.ApiTxOverview:output_type -> block_proto.ApiTxOverviewResponse
	25, // 56: block_proto.BlockGrpcService.ApiCountAddress:output_type -> block_proto.ApiCountAddressResponse
	26, // 57: block_proto.BlockGrpcService.ApiTxExists:output_type -> block_proto.ApiTxExistsResponse
	27, // 58: block_proto.BlockGrpcService.ApiBlockExists:output_type -> block_proto.ApiBlockExistsResponse
	29, // 59: block_proto.BlockGrpcService.ApiTxListByContract:output_type -> block_proto.ApiTxListByContractResponse
	30, // 60: block_proto.BlockGrpcService.ApiContractOverview:output_type -> block_proto.ApiContractOverviewResponse
	42, // [42:61] is the sub-list for method output_type
	23, // [23:42] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_block_proto_init() }
func file_block_proto_init() {
	if File_block_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_block_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletTokenPriceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletTokenPriceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletTxDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletTokenUpdatedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletTokenListAndVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletTokenSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletGetTokenListByTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletTokenListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletTxListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletTxListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountTransactionByBlockNumberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountTransactionByBlockNumberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlocksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlocksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountByTimeRangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountByTimeRangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiVerifyTokenContractRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiVerifyTokenContractResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiBlockOverviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiBlockOverviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiTxOverviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiTxOverviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiCountAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiCountAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiTxExistsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiBlockExistsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiContractRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiTxListByContractResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiContractOverviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletTokenPriceRequest_TokenData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletTokenPriceResponse_TokenPriceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletTokenListAndVersionResponse_TokenItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletTokenListResponse_TokenItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletTxListResponse_TxItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlocksResponse_BlockItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_block_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiTxListByContractResponse_TxItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_block_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_block_proto_goTypes,
		DependencyIndexes: file_block_proto_depIdxs,
		EnumInfos:         file_block_proto_enumTypes,
		MessageInfos:      file_block_proto_msgTypes,
	}.Build()
	File_block_proto = out.File
	file_block_proto_rawDesc = nil
	file_block_proto_goTypes = nil
	file_block_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BlockGrpcServiceClient is the client API for BlockGrpcService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BlockGrpcServiceClient interface {
	// wallet rpc
	WalletTokenPrice(ctx context.Context, in *WalletTokenPriceRequest, opts ...grpc.CallOption) (*WalletTokenPriceResponse, error)
	WalletTxDetails(ctx context.Context, in *WalletTxDetailsRequest, opts ...grpc.CallOption) (*WalletTxListResponse, error)
	WalletTokenUpdated(ctx context.Context, in *WalletTokenUpdatedRequest, opts ...grpc.CallOption) (*WalletTokenListAndVersionResponse, error)
	WalletTokenSearch(ctx context.Context, in *WalletTokenSearchRequest, opts ...grpc.CallOption) (*WalletTokenListResponse, error)
	WalletGetTokenListByType(ctx context.Context, in *WalletGetTokenListByTypeRequest, opts ...grpc.CallOption) (*WalletTokenListAndVersionResponse, error)
	WalletGetTransactionList(ctx context.Context, in *WalletTxListRequest, opts ...grpc.CallOption) (*WalletTxListResponse, error)
	// block explorer
	CountTransactionByTimeRange(ctx context.Context, in *CountByTimeRangeRequest, opts ...grpc.CallOption) (*CountByTimeRangeResponse, error)
	GetBlocks(ctx context.Context, in *GetBlocksRequest, opts ...grpc.CallOption) (*GetBlocksResponse, error)
	CountTransactionByBlockNumber(ctx context.Context, in *CountTransactionByBlockNumberRequest, opts ...grpc.CallOption) (*CountTransactionByBlockNumberResponse, error)
	CountAccountByTimeRange(ctx context.Context, in *CountByTimeRangeRequest, opts ...grpc.CallOption) (*CountByTimeRangeResponse, error)
	CountContractByTimeRange(ctx context.Context, in *CountByTimeRangeRequest, opts ...grpc.CallOption) (*CountByTimeRangeResponse, error)
	ApiVerifyTokenSymbol(ctx context.Context, in *ApiVerifyTokenContractRequest, opts ...grpc.CallOption) (*ApiVerifyTokenContractResponse, error)
	ApiBlockOverview(ctx context.Context, in *ApiBlockOverviewRequest, opts ...grpc.CallOption) (*ApiBlockOverviewResponse, error)
	ApiTxOverview(ctx context.Context, in *ApiTxOverviewRequest, opts ...grpc.CallOption) (*ApiTxOverviewResponse, error)
	ApiCountAddress(ctx context.Context, in *ApiCountAddressRequest, opts ...grpc.CallOption) (*ApiCountAddressResponse, error)
	ApiTxExists(ctx context.Context, in *ApiTxOverviewRequest, opts ...grpc.CallOption) (*ApiTxExistsResponse, error)
	ApiBlockExists(ctx context.Context, in *ApiBlockOverviewRequest, opts ...grpc.CallOption) (*ApiBlockExistsResponse, error)
	ApiTxListByContract(ctx context.Context, in *ApiContractRequest, opts ...grpc.CallOption) (*ApiTxListByContractResponse, error)
	ApiContractOverview(ctx context.Context, in *ApiContractRequest, opts ...grpc.CallOption) (*ApiContractOverviewResponse, error)
}

type blockGrpcServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBlockGrpcServiceClient(cc grpc.ClientConnInterface) BlockGrpcServiceClient {
	return &blockGrpcServiceClient{cc}
}

func (c *blockGrpcServiceClient) WalletTokenPrice(ctx context.Context, in *WalletTokenPriceRequest, opts ...grpc.CallOption) (*WalletTokenPriceResponse, error) {
	out := new(WalletTokenPriceResponse)
	err := c.cc.Invoke(ctx, "/block_proto.BlockGrpcService/WalletTokenPrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockGrpcServiceClient) WalletTxDetails(ctx context.Context, in *WalletTxDetailsRequest, opts ...grpc.CallOption) (*WalletTxListResponse, error) {
	out := new(WalletTxListResponse)
	err := c.cc.Invoke(ctx, "/block_proto.BlockGrpcService/WalletTxDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockGrpcServiceClient) WalletTokenUpdated(ctx context.Context, in *WalletTokenUpdatedRequest, opts ...grpc.CallOption) (*WalletTokenListAndVersionResponse, error) {
	out := new(WalletTokenListAndVersionResponse)
	err := c.cc.Invoke(ctx, "/block_proto.BlockGrpcService/WalletTokenUpdated", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockGrpcServiceClient) WalletTokenSearch(ctx context.Context, in *WalletTokenSearchRequest, opts ...grpc.CallOption) (*WalletTokenListResponse, error) {
	out := new(WalletTokenListResponse)
	err := c.cc.Invoke(ctx, "/block_proto.BlockGrpcService/WalletTokenSearch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockGrpcServiceClient) WalletGetTokenListByType(ctx context.Context, in *WalletGetTokenListByTypeRequest, opts ...grpc.CallOption) (*WalletTokenListAndVersionResponse, error) {
	out := new(WalletTokenListAndVersionResponse)
	err := c.cc.Invoke(ctx, "/block_proto.BlockGrpcService/WalletGetTokenListByType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockGrpcServiceClient) WalletGetTransactionList(ctx context.Context, in *WalletTxListRequest, opts ...grpc.CallOption) (*WalletTxListResponse, error) {
	out := new(WalletTxListResponse)
	err := c.cc.Invoke(ctx, "/block_proto.BlockGrpcService/WalletGetTransactionList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockGrpcServiceClient) CountTransactionByTimeRange(ctx context.Context, in *CountByTimeRangeRequest, opts ...grpc.CallOption) (*CountByTimeRangeResponse, error) {
	out := new(CountByTimeRangeResponse)
	err := c.cc.Invoke(ctx, "/block_proto.BlockGrpcService/CountTransactionByTimeRange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockGrpcServiceClient) GetBlocks(ctx context.Context, in *GetBlocksRequest, opts ...grpc.CallOption) (*GetBlocksResponse, error) {
	out := new(GetBlocksResponse)
	err := c.cc.Invoke(ctx, "/block_proto.BlockGrpcService/GetBlocks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockGrpcServiceClient) CountTransactionByBlockNumber(ctx context.Context, in *CountTransactionByBlockNumberRequest, opts ...grpc.CallOption) (*CountTransactionByBlockNumberResponse, error) {
	out := new(CountTransactionByBlockNumberResponse)
	err := c.cc.Invoke(ctx, "/block_proto.BlockGrpcService/CountTransactionByBlockNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockGrpcServiceClient) CountAccountByTimeRange(ctx context.Context, in *CountByTimeRangeRequest, opts ...grpc.CallOption) (*CountByTimeRangeResponse, error) {
	out := new(CountByTimeRangeResponse)
	err := c.cc.Invoke(ctx, "/block_proto.BlockGrpcService/CountAccountByTimeRange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockGrpcServiceClient) CountContractByTimeRange(ctx context.Context, in *CountByTimeRangeRequest, opts ...grpc.CallOption) (*CountByTimeRangeResponse, error) {
	out := new(CountByTimeRangeResponse)
	err := c.cc.Invoke(ctx, "/block_proto.BlockGrpcService/CountContractByTimeRange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockGrpcServiceClient) ApiVerifyTokenSymbol(ctx context.Context, in *ApiVerifyTokenContractRequest, opts ...grpc.CallOption) (*ApiVerifyTokenContractResponse, error) {
	out := new(ApiVerifyTokenContractResponse)
	err := c.cc.Invoke(ctx, "/block_proto.BlockGrpcService/ApiVerifyTokenSymbol", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockGrpcServiceClient) ApiBlockOverview(ctx context.Context, in *ApiBlockOverviewRequest, opts ...grpc.CallOption) (*ApiBlockOverviewResponse, error) {
	out := new(ApiBlockOverviewResponse)
	err := c.cc.Invoke(ctx, "/block_proto.BlockGrpcService/ApiBlockOverview", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockGrpcServiceClient) ApiTxOverview(ctx context.Context, in *ApiTxOverviewRequest, opts ...grpc.CallOption) (*ApiTxOverviewResponse, error) {
	out := new(ApiTxOverviewResponse)
	err := c.cc.Invoke(ctx, "/block_proto.BlockGrpcService/ApiTxOverview", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockGrpcServiceClient) ApiCountAddress(ctx context.Context, in *ApiCountAddressRequest, opts ...grpc.CallOption) (*ApiCountAddressResponse, error) {
	out := new(ApiCountAddressResponse)
	err := c.cc.Invoke(ctx, "/block_proto.BlockGrpcService/ApiCountAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockGrpcServiceClient) ApiTxExists(ctx context.Context, in *ApiTxOverviewRequest, opts ...grpc.CallOption) (*ApiTxExistsResponse, error) {
	out := new(ApiTxExistsResponse)
	err := c.cc.Invoke(ctx, "/block_proto.BlockGrpcService/ApiTxExists", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockGrpcServiceClient) ApiBlockExists(ctx context.Context, in *ApiBlockOverviewRequest, opts ...grpc.CallOption) (*ApiBlockExistsResponse, error) {
	out := new(ApiBlockExistsResponse)
	err := c.cc.Invoke(ctx, "/block_proto.BlockGrpcService/ApiBlockExists", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockGrpcServiceClient) ApiTxListByContract(ctx context.Context, in *ApiContractRequest, opts ...grpc.CallOption) (*ApiTxListByContractResponse, error) {
	out := new(ApiTxListByContractResponse)
	err := c.cc.Invoke(ctx, "/block_proto.BlockGrpcService/ApiTxListByContract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockGrpcServiceClient) ApiContractOverview(ctx context.Context, in *ApiContractRequest, opts ...grpc.CallOption) (*ApiContractOverviewResponse, error) {
	out := new(ApiContractOverviewResponse)
	err := c.cc.Invoke(ctx, "/block_proto.BlockGrpcService/ApiContractOverview", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlockGrpcServiceServer is the server API for BlockGrpcService service.
type BlockGrpcServiceServer interface {
	// wallet rpc
	WalletTokenPrice(context.Context, *WalletTokenPriceRequest) (*WalletTokenPriceResponse, error)
	WalletTxDetails(context.Context, *WalletTxDetailsRequest) (*WalletTxListResponse, error)
	WalletTokenUpdated(context.Context, *WalletTokenUpdatedRequest) (*WalletTokenListAndVersionResponse, error)
	WalletTokenSearch(context.Context, *WalletTokenSearchRequest) (*WalletTokenListResponse, error)
	WalletGetTokenListByType(context.Context, *WalletGetTokenListByTypeRequest) (*WalletTokenListAndVersionResponse, error)
	WalletGetTransactionList(context.Context, *WalletTxListRequest) (*WalletTxListResponse, error)
	// block explorer
	CountTransactionByTimeRange(context.Context, *CountByTimeRangeRequest) (*CountByTimeRangeResponse, error)
	GetBlocks(context.Context, *GetBlocksRequest) (*GetBlocksResponse, error)
	CountTransactionByBlockNumber(context.Context, *CountTransactionByBlockNumberRequest) (*CountTransactionByBlockNumberResponse, error)
	CountAccountByTimeRange(context.Context, *CountByTimeRangeRequest) (*CountByTimeRangeResponse, error)
	CountContractByTimeRange(context.Context, *CountByTimeRangeRequest) (*CountByTimeRangeResponse, error)
	ApiVerifyTokenSymbol(context.Context, *ApiVerifyTokenContractRequest) (*ApiVerifyTokenContractResponse, error)
	ApiBlockOverview(context.Context, *ApiBlockOverviewRequest) (*ApiBlockOverviewResponse, error)
	ApiTxOverview(context.Context, *ApiTxOverviewRequest) (*ApiTxOverviewResponse, error)
	ApiCountAddress(context.Context, *ApiCountAddressRequest) (*ApiCountAddressResponse, error)
	ApiTxExists(context.Context, *ApiTxOverviewRequest) (*ApiTxExistsResponse, error)
	ApiBlockExists(context.Context, *ApiBlockOverviewRequest) (*ApiBlockExistsResponse, error)
	ApiTxListByContract(context.Context, *ApiContractRequest) (*ApiTxListByContractResponse, error)
	ApiContractOverview(context.Context, *ApiContractRequest) (*ApiContractOverviewResponse, error)
}

// UnimplementedBlockGrpcServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBlockGrpcServiceServer struct {
}

func (*UnimplementedBlockGrpcServiceServer) WalletTokenPrice(context.Context, *WalletTokenPriceRequest) (*WalletTokenPriceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WalletTokenPrice not implemented")
}
func (*UnimplementedBlockGrpcServiceServer) WalletTxDetails(context.Context, *WalletTxDetailsRequest) (*WalletTxListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WalletTxDetails not implemented")
}
func (*UnimplementedBlockGrpcServiceServer) WalletTokenUpdated(context.Context, *WalletTokenUpdatedRequest) (*WalletTokenListAndVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WalletTokenUpdated not implemented")
}
func (*UnimplementedBlockGrpcServiceServer) WalletTokenSearch(context.Context, *WalletTokenSearchRequest) (*WalletTokenListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WalletTokenSearch not implemented")
}
func (*UnimplementedBlockGrpcServiceServer) WalletGetTokenListByType(context.Context, *WalletGetTokenListByTypeRequest) (*WalletTokenListAndVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WalletGetTokenListByType not implemented")
}
func (*UnimplementedBlockGrpcServiceServer) WalletGetTransactionList(context.Context, *WalletTxListRequest) (*WalletTxListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WalletGetTransactionList not implemented")
}
func (*UnimplementedBlockGrpcServiceServer) CountTransactionByTimeRange(context.Context, *CountByTimeRangeRequest) (*CountByTimeRangeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountTransactionByTimeRange not implemented")
}
func (*UnimplementedBlockGrpcServiceServer) GetBlocks(context.Context, *GetBlocksRequest) (*GetBlocksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlocks not implemented")
}
func (*UnimplementedBlockGrpcServiceServer) CountTransactionByBlockNumber(context.Context, *CountTransactionByBlockNumberRequest) (*CountTransactionByBlockNumberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountTransactionByBlockNumber not implemented")
}
func (*UnimplementedBlockGrpcServiceServer) CountAccountByTimeRange(context.Context, *CountByTimeRangeRequest) (*CountByTimeRangeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountAccountByTimeRange not implemented")
}
func (*UnimplementedBlockGrpcServiceServer) CountContractByTimeRange(context.Context, *CountByTimeRangeRequest) (*CountByTimeRangeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountContractByTimeRange not implemented")
}
func (*UnimplementedBlockGrpcServiceServer) ApiVerifyTokenSymbol(context.Context, *ApiVerifyTokenContractRequest) (*ApiVerifyTokenContractResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiVerifyTokenSymbol not implemented")
}
func (*UnimplementedBlockGrpcServiceServer) ApiBlockOverview(context.Context, *ApiBlockOverviewRequest) (*ApiBlockOverviewResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiBlockOverview not implemented")
}
func (*UnimplementedBlockGrpcServiceServer) ApiTxOverview(context.Context, *ApiTxOverviewRequest) (*ApiTxOverviewResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiTxOverview not implemented")
}
func (*UnimplementedBlockGrpcServiceServer) ApiCountAddress(context.Context, *ApiCountAddressRequest) (*ApiCountAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiCountAddress not implemented")
}
func (*UnimplementedBlockGrpcServiceServer) ApiTxExists(context.Context, *ApiTxOverviewRequest) (*ApiTxExistsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiTxExists not implemented")
}
func (*UnimplementedBlockGrpcServiceServer) ApiBlockExists(context.Context, *ApiBlockOverviewRequest) (*ApiBlockExistsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiBlockExists not implemented")
}
func (*UnimplementedBlockGrpcServiceServer) ApiTxListByContract(context.Context, *ApiContractRequest) (*ApiTxListByContractResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiTxListByContract not implemented")
}
func (*UnimplementedBlockGrpcServiceServer) ApiContractOverview(context.Context, *ApiContractRequest) (*ApiContractOverviewResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiContractOverview not implemented")
}

func RegisterBlockGrpcServiceServer(s *grpc.Server, srv BlockGrpcServiceServer) {
	s.RegisterService(&_BlockGrpcService_serviceDesc, srv)
}

func _BlockGrpcService_WalletTokenPrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WalletTokenPriceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockGrpcServiceServer).WalletTokenPrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/block_proto.BlockGrpcService/WalletTokenPrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockGrpcServiceServer).WalletTokenPrice(ctx, req.(*WalletTokenPriceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockGrpcService_WalletTxDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WalletTxDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockGrpcServiceServer).WalletTxDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/block_proto.BlockGrpcService/WalletTxDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockGrpcServiceServer).WalletTxDetails(ctx, req.(*WalletTxDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockGrpcService_WalletTokenUpdated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WalletTokenUpdatedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockGrpcServiceServer).WalletTokenUpdated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/block_proto.BlockGrpcService/WalletTokenUpdated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockGrpcServiceServer).WalletTokenUpdated(ctx, req.(*WalletTokenUpdatedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockGrpcService_WalletTokenSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WalletTokenSearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockGrpcServiceServer).WalletTokenSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/block_proto.BlockGrpcService/WalletTokenSearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockGrpcServiceServer).WalletTokenSearch(ctx, req.(*WalletTokenSearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockGrpcService_WalletGetTokenListByType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WalletGetTokenListByTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockGrpcServiceServer).WalletGetTokenListByType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/block_proto.BlockGrpcService/WalletGetTokenListByType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockGrpcServiceServer).WalletGetTokenListByType(ctx, req.(*WalletGetTokenListByTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockGrpcService_WalletGetTransactionList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WalletTxListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockGrpcServiceServer).WalletGetTransactionList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/block_proto.BlockGrpcService/WalletGetTransactionList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockGrpcServiceServer).WalletGetTransactionList(ctx, req.(*WalletTxListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockGrpcService_CountTransactionByTimeRange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountByTimeRangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockGrpcServiceServer).CountTransactionByTimeRange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/block_proto.BlockGrpcService/CountTransactionByTimeRange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockGrpcServiceServer).CountTransactionByTimeRange(ctx, req.(*CountByTimeRangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockGrpcService_GetBlocks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlocksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockGrpcServiceServer).GetBlocks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/block_proto.BlockGrpcService/GetBlocks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockGrpcServiceServer).GetBlocks(ctx, req.(*GetBlocksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockGrpcService_CountTransactionByBlockNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountTransactionByBlockNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockGrpcServiceServer).CountTransactionByBlockNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/block_proto.BlockGrpcService/CountTransactionByBlockNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockGrpcServiceServer).CountTransactionByBlockNumber(ctx, req.(*CountTransactionByBlockNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockGrpcService_CountAccountByTimeRange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountByTimeRangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockGrpcServiceServer).CountAccountByTimeRange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/block_proto.BlockGrpcService/CountAccountByTimeRange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockGrpcServiceServer).CountAccountByTimeRange(ctx, req.(*CountByTimeRangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockGrpcService_CountContractByTimeRange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountByTimeRangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockGrpcServiceServer).CountContractByTimeRange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/block_proto.BlockGrpcService/CountContractByTimeRange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockGrpcServiceServer).CountContractByTimeRange(ctx, req.(*CountByTimeRangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockGrpcService_ApiVerifyTokenSymbol_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiVerifyTokenContractRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockGrpcServiceServer).ApiVerifyTokenSymbol(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/block_proto.BlockGrpcService/ApiVerifyTokenSymbol",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockGrpcServiceServer).ApiVerifyTokenSymbol(ctx, req.(*ApiVerifyTokenContractRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockGrpcService_ApiBlockOverview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiBlockOverviewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockGrpcServiceServer).ApiBlockOverview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/block_proto.BlockGrpcService/ApiBlockOverview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockGrpcServiceServer).ApiBlockOverview(ctx, req.(*ApiBlockOverviewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockGrpcService_ApiTxOverview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiTxOverviewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockGrpcServiceServer).ApiTxOverview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/block_proto.BlockGrpcService/ApiTxOverview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockGrpcServiceServer).ApiTxOverview(ctx, req.(*ApiTxOverviewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockGrpcService_ApiCountAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiCountAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockGrpcServiceServer).ApiCountAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/block_proto.BlockGrpcService/ApiCountAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockGrpcServiceServer).ApiCountAddress(ctx, req.(*ApiCountAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockGrpcService_ApiTxExists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiTxOverviewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockGrpcServiceServer).ApiTxExists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/block_proto.BlockGrpcService/ApiTxExists",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockGrpcServiceServer).ApiTxExists(ctx, req.(*ApiTxOverviewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockGrpcService_ApiBlockExists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiBlockOverviewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockGrpcServiceServer).ApiBlockExists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/block_proto.BlockGrpcService/ApiBlockExists",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockGrpcServiceServer).ApiBlockExists(ctx, req.(*ApiBlockOverviewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockGrpcService_ApiTxListByContract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiContractRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockGrpcServiceServer).ApiTxListByContract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/block_proto.BlockGrpcService/ApiTxListByContract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockGrpcServiceServer).ApiTxListByContract(ctx, req.(*ApiContractRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockGrpcService_ApiContractOverview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiContractRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockGrpcServiceServer).ApiContractOverview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/block_proto.BlockGrpcService/ApiContractOverview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockGrpcServiceServer).ApiContractOverview(ctx, req.(*ApiContractRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BlockGrpcService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "block_proto.BlockGrpcService",
	HandlerType: (*BlockGrpcServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "WalletTokenPrice",
			Handler:    _BlockGrpcService_WalletTokenPrice_Handler,
		},
		{
			MethodName: "WalletTxDetails",
			Handler:    _BlockGrpcService_WalletTxDetails_Handler,
		},
		{
			MethodName: "WalletTokenUpdated",
			Handler:    _BlockGrpcService_WalletTokenUpdated_Handler,
		},
		{
			MethodName: "WalletTokenSearch",
			Handler:    _BlockGrpcService_WalletTokenSearch_Handler,
		},
		{
			MethodName: "WalletGetTokenListByType",
			Handler:    _BlockGrpcService_WalletGetTokenListByType_Handler,
		},
		{
			MethodName: "WalletGetTransactionList",
			Handler:    _BlockGrpcService_WalletGetTransactionList_Handler,
		},
		{
			MethodName: "CountTransactionByTimeRange",
			Handler:    _BlockGrpcService_CountTransactionByTimeRange_Handler,
		},
		{
			MethodName: "GetBlocks",
			Handler:    _BlockGrpcService_GetBlocks_Handler,
		},
		{
			MethodName: "CountTransactionByBlockNumber",
			Handler:    _BlockGrpcService_CountTransactionByBlockNumber_Handler,
		},
		{
			MethodName: "CountAccountByTimeRange",
			Handler:    _BlockGrpcService_CountAccountByTimeRange_Handler,
		},
		{
			MethodName: "CountContractByTimeRange",
			Handler:    _BlockGrpcService_CountContractByTimeRange_Handler,
		},
		{
			MethodName: "ApiVerifyTokenSymbol",
			Handler:    _BlockGrpcService_ApiVerifyTokenSymbol_Handler,
		},
		{
			MethodName: "ApiBlockOverview",
			Handler:    _BlockGrpcService_ApiBlockOverview_Handler,
		},
		{
			MethodName: "ApiTxOverview",
			Handler:    _BlockGrpcService_ApiTxOverview_Handler,
		},
		{
			MethodName: "ApiCountAddress",
			Handler:    _BlockGrpcService_ApiCountAddress_Handler,
		},
		{
			MethodName: "ApiTxExists",
			Handler:    _BlockGrpcService_ApiTxExists_Handler,
		},
		{
			MethodName: "ApiBlockExists",
			Handler:    _BlockGrpcService_ApiBlockExists_Handler,
		},
		{
			MethodName: "ApiTxListByContract",
			Handler:    _BlockGrpcService_ApiTxListByContract_Handler,
		},
		{
			MethodName: "ApiContractOverview",
			Handler:    _BlockGrpcService_ApiContractOverview_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "block.proto",
}
